<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fbd.core.app.crowdfunding.model.CrowdfundingFounderEducationsModelMapper" >
  <resultMap id="BaseResultMap" type="com.fbd.core.app.crowdfunding.model.CrowdfundingFounderEducationsModel" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="loan_no" property="loanNo" jdbcType="VARCHAR" />
    <result column="founder_id" property="founderId" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="graduated" property="graduated" jdbcType="VARCHAR" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, loan_no, founder_id, school, start_time, end_time, graduated, degree, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from crowdfunding_founder_educations
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from crowdfunding_founder_educations
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteByFounderId" parameterType="java.lang.String" >
    delete from crowdfunding_founder_educations
    where founder_id = #{founderId,jdbcType=VARCHAR}
  </delete> 
  
   <select id="selectList" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from crowdfunding_founder_educations
    where founder_id = #{founderId,jdbcType=VARCHAR}
    order by create_time desc
  </select>    
  
  
  
  <insert id="insert" parameterType="com.fbd.core.app.crowdfunding.model.CrowdfundingFounderEducationsModel" >
    insert into crowdfunding_founder_educations (id, loan_no, founder_id, 
      school, start_time, end_time, 
      graduated, degree, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{loanNo,jdbcType=VARCHAR}, #{founderId,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{graduated,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.fbd.core.app.crowdfunding.model.CrowdfundingFounderEducationsModel" >
    update crowdfunding_founder_educations
    <set >
      <if test="loanNo != null" >
        loan_no = #{loanNo,jdbcType=VARCHAR},
      </if>
      <if test="founderId != null" >
        founder_id = #{founderId,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="graduated != null" >
        graduated = #{graduated,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fbd.core.app.crowdfunding.model.CrowdfundingFounderEducationsModel" >
    update crowdfunding_founder_educations
    set loan_no = #{loanNo,jdbcType=VARCHAR},
      founder_id = #{founderId,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      graduated = #{graduated,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>